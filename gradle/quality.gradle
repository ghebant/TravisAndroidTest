apply plugin: "pmd"
//apply plugin: "jacoco"
apply plugin: "findbugs"
apply plugin: "checkstyle"

//Pmd
task pmd(type: Pmd) {
    group "Reporting"
    description "Generate Pmd reports."

    reports {
        xml.enabled = false
        html.enabled = true
    }
    source = files(["src/main/java"])
    classpath = files()
    //ruleSetFiles = files("${project.rootDir}/config/pmd/pmd.xml")
}

//Findbugs
task findbugs(type: FindBugs,
        dependsOn: file("$project.buildDir/intermediates/classes").exists() ? "assembleDebug" :
                "assemble") {
    group "Reporting"
    description "Generate Findbugs reports."

    reports {
        xml.enabled = false
        html.enabled = true
    }
    effort = "max"
    reportLevel = "low"
    source "src/main/java"
    classpath = files()
    /*classes = (file("$project.buildDir/intermediates/classes/debug").exists()
            ? fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: exclude)
            : fileTree(dir: "$project.buildDir/classes", excludes: exclude))*/
    excludeFilter = file("${project.rootDir}/config/findbugs/findbugs.xml")
}

//Checkstyle
task checkstyle(type: Checkstyle) {
    group "Reporting"
    description "Generate Checkstyle reports."

    reports.html.enabled = true
    showViolations true
    source "src/main/java"
    classpath = files()
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
}

checkstyle {
    toolVersion "8.10"
}

afterEvaluate {
    tasks.findByName("check").dependsOn("pmd", "findBugs", "checkstyle", "jacocoReport")
}
